// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=outDMuxA, b=outDMuxB, c=outDMuxC, d=outDMuxD, 
    				 e=outDMuxE, f=outDMuxF, g=outDMuxG, h=outDMuxH);
		Register(in=in, load=outDMuxA, out=outRegister1);		// Register 1
		Register(in=in, load=outDMuxB, out=outRegister2); 	// Register 2
		Register(in=in, load=outDMuxC, out=outRegister3); 	// ...
		Register(in=in, load=outDMuxD, out=outRegister4);
		Register(in=in, load=outDMuxE, out=outRegister5);
		Register(in=in, load=outDMuxF, out=outRegister6);
		Register(in=in, load=outDMuxG, out=outRegister7);
		Register(in=in, load=outDMuxH, out=outRegister8);
		Mux8Way16(a=outRegister1, b=outRegister2, c=outRegister3, d=outRegister4,
							e=outRegister5, f=outRegister6, g=outRegister7, h=outRegister8,  
							sel=address, out=out);
}