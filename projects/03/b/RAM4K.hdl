// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=outDMuxA, b=outDMuxB, c=outDMuxC, 
    				 d=outDMuxD, e=outDMuxE, f=outDMuxF, g=outDMuxG, h=outDMuxH);
		RAM512(in=in, load=outDMuxA, address=address[0..8], out=outRam1);
		RAM512(in=in, load=outDMuxB,address=address[0..8], out=outRam2);
		RAM512(in=in, load=outDMuxC, address=address[0..8], out=outRam3);
		RAM512(in=in, load=outDMuxD,address=address[0..8], out=outRam4);
		RAM512(in=in, load=outDMuxE, address=address[0..8], out=outRam5);
		RAM512(in=in, load=outDMuxF,address=address[0..8], out=outRam6);
		RAM512(in=in, load=outDMuxG, address=address[0..8], out=outRam7);
		RAM512(in=in, load=outDMuxH,address=address[0..8], out=outRam8);
		Mux8Way16(a=outRam1, b=outRam2, c=outRam3, d=outRam4, e=outRam5, f=outRam6,
		 					g=outRam7, h=outRam8, sel=address[9..11], out=out);
}